name: CI

on:
  push:
    branches: [main, master]
    tags:
      - v*.*.*
  pull_request:
    branches: [main, master]

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Verify
        run: dotnet build --no-restore -p:TreatWarningsAsErrors=True -p:EnforceCodeStyleInBuild=True

      - name: Tests
        run: dotnet test --no-build --no-restore --logger "junit;LogFilePath=$(pwd)/outputs/tests/{assembly}/{framework}/TestResults.xml"

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files:
            ./outputs/tests/**/TestResults.xml

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref_type == "tag"
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: 7.0.201

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Restore tools
        run: dotnet tool restore

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true

      - name: Pack
        run: |
          dotnet pack --no-restore --configuration Release --include-symbols --include-source -p:Version=${{ steps.gitversion.outputs.semVer }} -o ./outputs/packages/ -p:SymbolPackageFormat=snupkg -p:DebugType=portable

      - name: Add to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./outputs/packages/*.nupkg
            ./outputs/packages/*.snupkg

      - name: Push to NuGet
        run: |
          dotnet nuget push ./outputs/packages/*.nupkg --api-key $NUGET_AUTH_TOKEN --source https://api.nuget.org/v3/index.json --skip-duplicate
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}

      - name: Push to GitHub Package Registry
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          dotnet nuget push ./outputs/packages/*.nupkg --api-key $NUGET_AUTH_TOKEN --source https://nuget.pkg.github.com/Kralizek/index.json --skip-duplicate